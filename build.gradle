// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${ANDROID_GRADLE_VERSION}"
        classpath "org.greenrobot:greendao-gradle-plugin:${GREENDAO_GRADLE_PLUGIN_VERSION}"
        //这里配置 plugin与apt 供butterknife使用
        classpath "com.jakewharton:butterknife-gradle-plugin:${BUTTERKNIFE_GRADLE_PLUGIN_VERSION}"
        classpath "com.neenbedankt.gradle.plugins:android-apt:${ANDROID_APT_VERSION}"
        classpath "com.github.dcendents:android-maven-gradle-plugin:${ANDROID_MAVEN_GRADLE_PLUGIN_VERSION}"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

def getNDKBuildCmd() {
    def ndkDir = System.getenv('ANDROID_NDK_HOME')
    if(ndkDir == null) {
        ndkDir = System.getenv('ANDROID_NDK')
    }
    if(ndkDir == null) {
        ndkDir = System.getenv('NDKROOT')
    }
    if(ndkDir == null) {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        ndkDir = properties.getProperty('ndk.dir')
    }
    if(ndkDir == null) {
        throw new GradleException('NDK not found! Check your environment for ANDROID_NDK or your local.properties contains ndk.dir')
    }
    if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
        return ndkDir + '/ndk-build.cmd'
    } else {
        return ndkDir + '/ndk-build'
    }
}

subprojects {

    task printProjectName << {
        println prjectName =  rootProject.name
    }

    task NDKBuildDebug(type: Exec) {
        commandLine getNDKBuildCmd(), 'V=0', '-j10', 'NDK_DEBUG=1'
    }

    task NDKBuildRelease(type: Exec) {
        commandLine getNDKBuildCmd(), 'V=0', '-j10', 'NDK_DEBUG=0'
    }

    task NDKBuildClean(type: Exec) {
        println("ndk commond = " + getNDKBuildCmd())
        commandLine getNDKBuildCmd(), 'clean'
    }

}

task clean(type: Delete) {
    delete rootProject.buildDir
}
