apply plugin: 'com.android.library'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'com.github.dcendents.android-maven'
group="com.github.xiaosw"

android {
    compileSdkVersion  COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION as String

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets.main {
        jniLibs.srcDirs = ['/src/main/libs']

        jni.srcDirs = ['src/main/jni']
    }

}

greendao {
    schemaVersion 1
    daoPackage 'com.xiaosw.library.db.dao'
    targetGenDir 'src/main/java'
}

project.afterEvaluate {
    printf("===============start ndk build======================\n")
    compileDebugNdk.dependsOn 'NDKBuildDebug'
    compileReleaseNdk.dependsOn 'NDKBuildRelease'
    clean.dependsOn 'NDKBuildClean'

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:support-v4:${SUPPORT_V4_VERSION}"
    compile "com.android.support:appcompat-v7:${SUPPORT_V7_VERSION}"
    testCompile "junit:junit:${JUNIT_VERSION}"
    compile "com.android.support:cardview-v7:${CARDVIEW_V7_VERSION}"
    compile "com.android.support:multidex:${MULTIDEX_VERSION}"
    compile "com.android.support:recyclerview-v7:${RECYCLERVIEW_V7_VERSION}"
    compile "org.greenrobot:greendao:${GREENDAO_VERSION}"
    // This is only needed if you want to use encrypted databases
    compile "net.zetetic:android-database-sqlcipher:${ANDROID_DATABASE_SQLCIPHER_VERSION}"
    compile "com.github.bumptech.glide:glide:${GLIDE_VERSION}"
    compile files('src/main/libs/nineoldandroids-2.4.0.jar')
    compile "com.jakewharton:butterknife:${BUTTERKNIFE_VERSION}"
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
